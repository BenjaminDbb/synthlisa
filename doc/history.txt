2005/12/21 Release 1.2.7, beta version

Moved the main PyLISA code to lisasim-lisa.cpp from lisasim-lisa.h.

Added AllPyLISA object, which takes pointers to two Python functions:
the first is analog to putp(sc,time), and should return the three
spacecraft positions (in seconds, given as tuples); the second is
analog to armlength(link,time), and should return the armlengths in
seconds. If only one function is given, the armlengths will be
determined from the s/c positions using the exact light-propagation
equation (solved in the base LISA class).

Added a function setguessL to the base LISA to initialize the initial
light-propagation--equation guesses from the positions of the
spacecraft (this was needed by AllPyLISA).

Added TDIalpha, TDIbeta, TDIgamma functionoid (w/Signal interface) to
lisasim-tdi.h.

Added default parameters for standard TDInoise constructor. Documented
constructor in lisasim-swig.i.

Added ResampledSignalSource and CachedSignal (in analogy to
CacheLengthLISA) to lisasim-signal.(h|cpp). The idea is that an
expensive function (such as the TDI functionoids) is sampled at
regular intervals, and interpolation is used to get values in between.

========================================================================

2005/12/2 Release 1.2.6, beta version

Added SampledLISA to lisasim-lisa and lisasim-swig to support sampled
spacecraft positions; added file of positions from Ted Sweetser's
simulations to distribution, and patched lisautils.py to load it and
massage it into useful form.

Fixed bad initialization bug in lisasim-signal.cpp that broke
LagrangeInterpolator.

Patched lisasim-typemaps.i to accept 2D Numeric arrays and flatten them
for use in SampledLISA.

Added putep and putec static methods to Wave to access basic
polarization tensors.

Added SampleCacheLISA() to speed up armlength determination of
SampledLISA (and possibly other LISA classes).

Inlined many Vector methods.

Cleaned up lisasim-lisa.cpp somewhat, with standard link-index and
s/c-index checking functions. Fixed conceptual (but ineffectual)
sqrt(negative) bug in LISA::armlength().

Recoded LagrangeInterpolator (NewLagrangeInterpolator) to increase
efficiency. Gains seem nominal.

Added mechanism to set the seed of pseudorandom number generators
globally. This should ensure the reproducibility of results if the
initial seed is captured with WhiteNoiseSource.getglobalseed(). If the
seed is not set explicitly, it is obtained from the current time (in
microseconds); the global seed is increased by one after creating each new
WhiteNoiseSource object.

Added TAUS pseudorandom engine from GSL 1.4. Should be faster than
ranlux. Switched to using TAUS in WhiteNoiseSource.

========================================================================

2005/11/10 Release 1.2.5, beta version

Removed some old putp and putn -> double[] calls in lisasim-lisa and
lisasim-retard.

Added some exception trapping:
- invalid spacecraft index in EccentricInclined::settime
- invalid hash in CacheLISA::retard
- time OutOfBounds in TDInoise::y and TDInoise::z

Fixed indentation:
- lisasim-lisa.h
- lisasim-retard.h

New Signal/Noise architecture in lisasim-signal.cpp and lisasim-signal.h

Changed main Noise (now Signal) method to value():
- locking noise objects in lisasim-tdinoise.cpp

Changed standard Noise objects in lisasim-TDInoise.* to PowerLawNoise
(lisasim-signal); NoiseWave and SampledWave objects in lisasim-wave.*

Added SWIG typecast for Numeric array with size

Added some error trapping to getobsc in lisautils

Simplified SWIG interface, added exception trapping, converted to new
Noise/Signal interface

Added CVS Ids:
- most source and header files

Added SineGaussian wave type.

========================================================================

2005/11/1 Release 1.2.4, beta version

Changed dec and asc to beta (= elat) and lambda (= elon) everywhere.

Removed "special" LISAs (development and testing only): NoisyLISA,
NominalLISA, LinearLISA, MeasureLISA. Moved to extra (not
distributed).

Fixed some "delete"s that should have been "delete []".

Added GaussianPulse Wave object, with optimized "inscope"
functionality implemented in TDIsignal.

Continued improving online documentation (added docstring for several
Wave objects, removed duplicate docstring for constructors and
destructors).

Simplified interface: moved some proprietary LISA functionality to
extra.

Removed direct Python access to k and pp, pc in Wave, added putk. pp
and pc can be gotten using a specially-designed PyWave.

Removed InterpolateMemory (but defined backward-compatible Python
factory based on NoiseWave). InterpolateMemory is replaced by
SampledWave, defined by a Python factory.

========================================================================

2005/07/21 Release 1.2.3, beta version

Added class-variable access to some Vector and Tensor objects.

Removed AnyLISA (generic armlength class based on SWIG directors).

Created WaveObject, WaveArray, to allow multiple waves (at different
positions) to be added together within TDIsignal.

Restructured package and module names. Now lisautils imports Numeric
and FFT explicitly; added master package synthlisa. Changed example
files accordingly.

Added swigged Healpix C functions in package "healpix".

Added NoiseWave to get hp and hc from Noise objects. Constructors
allow setting the Noise objects from simple spectral densities (with
the exponent syntax), and from sampled time series. This supercedes
InterpolateMemory as the preferred buffered wave, since it allows
filtering and higher-order interpolation of hp and hc.

Fixed bug (perhaps partially) in the range checks for sampled noise.

Added docstring documentation for LISA classes in SWIG interface;
cleaned up some method definitions, prepared to remove some LISA
derived classes.

In lisasim-lisa.(cpp|h), cleaned up constructor calls, fixed bug in
handling of ccw n[i] in OriginalLISA, removed stdlisa(), replaced by
CircularRotating().

========================================================================

2005/07/06 Release 1.2.2, beta version

Added SWIG typemap to return three-vectors (class Vector) as Python
tuples, and three-tensors (class Tensor) as Python tuples-of-tuples;
correspondingly, added functions putp(craft,time) and putn(craft,time)
for all the LISA classes, and putwave for all the Wave classes. [Note
that these take first arguments Vector& and Tensor& in C++, not needed
in Python where we can return tuples.]

Also, exposed Wave.hp(t) and Wave.hc(t) to Python.

========================================================================

2005/05/19 Release 1.2.1, beta version

Fixed persistence problem for LISA/Noise/Wave objects passed to TDI
constructors. Using SWIG's %feature("addtofunc") to inject Python code
(which saves arguments) into Python shadow class constructors.

========================================================================

2005/05/06 Release 1.2, beta version
Current state of the art, after clearance; sent to various people on
05/09

Changes from 1.0 to 1.2 include...

2004/07/28 1.2 lisasim-retard.h
Second version of CacheLISA, based on home-grown hashed map. Better.

2004/07/28 1.1 lisasim-retard.h
First version of CacheLISA, based on STL map; not very fast

2004/07/28 1.4 lisautils.py
Made getobsc print final speed report

2004/07/28 1.10 lisasim.h
Added lisasim-retard.h include

2004/07/28 1.6 lisasim-tdisignal.cpp
Fixed nominal-physical LISA exchange bug. Changed from retardtime
mechanism to LISA retard calls

2004/07/28 1.15 lisasim-tdinoise.cpp
Fixed nominal-physical LISA exchange bug. Changed from retardtime
mechanism to LISA retard calls

2004/07/28 1.11 lisasim-tdi.cpp
Moved retardtime mechanism to base LISA class methods, added zeta1,
zeta2, zeta3 definitions

2004/07/28 1.8 lisasim-tdi.h
Moved retardtime mechanism to base LISA class methods

2004/07/28 1.19 lisasim-swig.i
Added CacheLISA interface; added zeta1, zeta2, zeta3 to TDI interface

2004/07/28 1.16 lisasim-lisa.h
Moved retardtime mechanism to base LISA class methods, to facilitate
overloading in a CacheLISA class.

2004/07/28 1.17 lisasim-lisa.cpp
Moved retardtime mechanism to base LISA class methods, to facilitate
overloading in a CacheLISA class. Corrected buffering of noise in
NoisyLISA to 8 lighttimes.

2004/07/28 1.19 Makefile
Corrected lisasim-swig_wrap.cxx dependency on headers; added
lisasim-retard.h to headers

2004/07/26 1.18 lisasim-swig.i
Revised public interface, added public method noise to Noise

2004/07/26 1.3 lisautils.py
Added nonoverlapping-windowed periodogram, zerotime option for getobs,
fixed bug in triangular window

2004/07/14 Release 1.0
This history starts here.
